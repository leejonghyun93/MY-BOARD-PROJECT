<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.board.dao.UserDao">
    <resultMap id="userResultMap" type="com.example.board.dto.UserDto">
        <result property="userid" column="userid"/>
        <result property="passwd" column="passwd"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>
        <result property="loginTime" column="loginTime"/>
        <result property="address" column="address"/>
        <result property="detailAddress" column="detailAddress"/>
        <result property="fullAddress" column="fulladdress"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="regDate" column="regDate"/>
        <result property="updateDate" column="updateDate"/>
        <result property="loginFailCount" column="login_fail_count"/>
        <result property="accountLocked" column="account_locked"/>
    </resultMap>
    <select id="getMember" resultMap="userResultMap">
        SELECT *
        FROM t_member
        WHERE userid = #{userid}
    </select>

    <update id="setLoginTime" parameterType="String">
        update t_member set
            loginTime=now()
        where userid = #{userid}
    </update>

    <insert id="insert" parameterType="com.example.board.dto.UserDto">
        INSERT INTO t_member (
        userid,
        passwd,
        name,
        age,
        loginTime,
        address,
        detailAddress,
        fulladdress,
        phone,
        email,
        regDate,
        updateDate
        ) VALUES (
        #{userid},
        #{passwd},
        #{name},
        #{age},
        NOW(),
        #{address},
        #{detailAddress},
        #{fullAddress},
        #{phone},
        #{email},
        NOW(),
        NOW()
        )
    </insert>


    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM t_member
        <where>
            <if test="searchValue != null and searchValue != ''">
                name LIKE CONCAT('%', #{searchValue}, '%')
            </if>
        </where>
    </select>

    <!-- 페이징된 회원 목록 -->
    <select id="selectPagedMembers" resultType="com.example.board.dto.UserDto">
        SELECT *
        FROM t_member
        <where>
            <if test="searchValue != null and searchValue != ''">
                name LIKE CONCAT('%', #{searchValue}, '%')
            </if>
        </where>
        ORDER BY userid
        LIMIT #{startRow}, #{pageSize}
    </select>

    <select id="getSelectUserDetail" resultType="com.example.board.dto.UserDto">
        SELECT *
            FROM t_member
        where userid = #{userid}

    </select>

    <update id="increaseLoginFailCount">
        UPDATE t_member
        SET login_fail_count = login_fail_count + 1
        WHERE userid = #{userid}
    </update>

    <update id="resetLoginFailCount">
        UPDATE t_member
        SET login_fail_count = 0
        WHERE userid = #{userid}
    </update>

    <update id="lockAccount">
        UPDATE t_member
        SET account_locked = 1
        WHERE userid = #{userid}
    </update>

    <update id="unlockAccount">
        UPDATE t_member
        SET login_fail_count = 0,
            account_locked = 0
        WHERE userid = #{userid}
    </update>

    <update id="updateUser" parameterType="com.example.board.dto.UserDto">
        UPDATE t_member
        SET
            userid = #{userid},
            passwd = #{passwd},
            name = #{name},
            age = #{age},
            address = #{address},
            detailAddress = #{detailAddress},
            fullAddress = #{fullAddress},
            phone = #{phone},
            email = #{email},
            updateDate = NOW(),
            role = #{role}
        WHERE userid = #{userid}
    </update>
</mapper>